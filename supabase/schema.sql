-- Schema for portfolio content in Supabase

-- Skills table
create table if not exists public.skills (
  id bigint generated by default as identity primary key,
  name text not null,
  icon text,
  description text,
  category text not null default 'others', -- frontend | backend | others
  order_index int
);

-- Projects table
create table if not exists public.projects (
  id bigint generated by default as identity primary key,
  title text not null,
  description text,
  image text,
  images jsonb, -- array of image urls
  video text,   -- url (youtube embed or mp4)
  short_talk text,
  category text, -- e.g., Game Development | Web Development | Mobile Applications
  order_index int
);

-- Experiences table
create table if not exists public.experiences (
  id bigint generated by default as identity primary key,
  company text not null,
  role text,
  start_date date,
  end_date date,
  description text,
  order_index int
);

-- Enable RLS and allow read for anon (public portfolio)
alter table public.skills enable row level security;
alter table public.projects enable row level security;
alter table public.experiences enable row level security;

-- Read-only policies for anon
do $$ begin
  if not exists (
    select 1 from pg_policies where policyname = 'Allow anon read skills'
  ) then
    create policy "Allow anon read skills" on public.skills for select to anon using (true);
  end if;
end $$;

do $$ begin
  if not exists (
    select 1 from pg_policies where policyname = 'Allow anon read projects'
  ) then
    create policy "Allow anon read projects" on public.projects for select to anon using (true);
  end if;
end $$;

do $$ begin
  if not exists (
    select 1 from pg_policies where policyname = 'Allow anon read experiences'
  ) then
    create policy "Allow anon read experiences" on public.experiences for select to anon using (true);
  end if;
end $$;

-- Optional: simple ordering defaults
create index if not exists skills_order_idx on public.skills (order_index nulls first, name);
create index if not exists projects_order_idx on public.projects (order_index nulls first, title);
create index if not exists experiences_order_idx on public.experiences (order_index nulls first, start_date desc);

